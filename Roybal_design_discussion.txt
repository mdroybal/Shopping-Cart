Monte Roybal
Shopping Cart Design Discussion

The virtual shopping cart which I implemented was done so with an object-oriented design in C++. I implemented 5 classes. The CD, Magazine and Book classes all inherited from the Item class which has data members common between all three classes. The Shopping Cart class acted as a container to hold Item objects which are added by the user. As the data structure to act as the container, I chose an array, mostly because I am most familiar with this data structure and was easily able to store the Item objects in it. I also implemented a functions file which held basic functions to allow the user to exercise the Shopping Cart. Within the main program, I manually instantiated 9 Item objects, 3 of each different item. From these 9 Item Objects, the user is able to add them to Shopping Cart through different methods. I would have liked to instantiate the objects dynamically to allow for N number of objects, but I was not successful at doing so. I did read though that through the utilization of a Map this could have been accomplished in a way that would allow for dynamic object name strings to be generated allowing for dynamic instantiation. Within the main program I had to utilize conditional statements to allow the user to make their selections within the infinite loop menu. With dynamic object instantiation, I could have probably gotten away from so many conditional statements. After implementing the entire program within a single source code file, I broke out each class and the functions into their own source and header files to allow for better modularity. 